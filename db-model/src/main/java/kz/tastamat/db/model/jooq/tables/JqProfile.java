/*
 * This file is generated by jOOQ.
*/
package kz.tastamat.db.model.jooq.tables;


import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import kz.tastamat.db.model.jooq.Indexes;
import kz.tastamat.db.model.jooq.JqPublic;
import kz.tastamat.db.model.jooq.Keys;
import kz.tastamat.db.model.jooq.tables.records.JqProfileRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JqProfile extends TableImpl<JqProfileRecord> {

    private static final long serialVersionUID = -709059883;

    /**
     * The reference instance of <code>public.wx_profile</code>
     */
    public static final JqProfile PROFILE = new JqProfile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JqProfileRecord> getRecordType() {
        return JqProfileRecord.class;
    }

    /**
     * The column <code>public.wx_profile.id_</code>.
     */
    public final TableField<JqProfileRecord, Long> ID = createField("id_", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.wx_profile.create_date_</code>.
     */
    public final TableField<JqProfileRecord, OffsetDateTime> CREATE_DATE = createField("create_date_", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>public.wx_profile.modify_date_</code>.
     */
    public final TableField<JqProfileRecord, OffsetDateTime> MODIFY_DATE = createField("modify_date_", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>public.wx_profile.user_</code>.
     */
    public final TableField<JqProfileRecord, Long> USER = createField("user_", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.wx_profile.wallet_</code>.
     */
    public final TableField<JqProfileRecord, Long> WALLET = createField("wallet_", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.wx_profile.template_</code>.
     */
    public final TableField<JqProfileRecord, String> TEMPLATE = createField("template_", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.wx_profile</code> table reference
     */
    public JqProfile() {
        this(DSL.name("wx_profile"), null);
    }

    /**
     * Create an aliased <code>public.wx_profile</code> table reference
     */
    public JqProfile(String alias) {
        this(DSL.name(alias), PROFILE);
    }

    /**
     * Create an aliased <code>public.wx_profile</code> table reference
     */
    public JqProfile(Name alias) {
        this(alias, PROFILE);
    }

    private JqProfile(Name alias, Table<JqProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private JqProfile(Name alias, Table<JqProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JqPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROFILE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JqProfileRecord> getPrimaryKey() {
        return Keys.PROFILE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JqProfileRecord>> getKeys() {
        return Arrays.<UniqueKey<JqProfileRecord>>asList(Keys.PROFILE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JqProfileRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JqProfileRecord, ?>>asList(Keys.PROFILE__FK_WX_PROFILE_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JqProfile as(String alias) {
        return new JqProfile(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JqProfile as(Name alias) {
        return new JqProfile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JqProfile rename(String name) {
        return new JqProfile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JqProfile rename(Name name) {
        return new JqProfile(name, null);
    }
}
