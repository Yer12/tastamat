/*
 * This file is generated by jOOQ.
*/
package kz.tastamat.db.model.jooq.tables;


import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import kz.tastamat.db.model.jooq.Indexes;
import kz.tastamat.db.model.jooq.JqPublic;
import kz.tastamat.db.model.jooq.Keys;
import kz.tastamat.db.model.jooq.tables.records.JqUserRecord;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JqUser extends TableImpl<JqUserRecord> {

    private static final long serialVersionUID = -921842155;

    /**
     * The reference instance of <code>public.wx_user</code>
     */
    public static final JqUser USER = new JqUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JqUserRecord> getRecordType() {
        return JqUserRecord.class;
    }

    /**
     * The column <code>public.wx_user.id_</code>.
     */
    public final TableField<JqUserRecord, Long> ID = createField("id_", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.wx_user.create_date_</code>.
     */
    public final TableField<JqUserRecord, OffsetDateTime> CREATE_DATE = createField("create_date_", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>public.wx_user.modify_date_</code>.
     */
    public final TableField<JqUserRecord, OffsetDateTime> MODIFY_DATE = createField("modify_date_", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>public.wx_user.phone_</code>.
     */
    public final TableField<JqUserRecord, String> PHONE = createField("phone_", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.wx_user.sms_code_</code>.
     */
    public final TableField<JqUserRecord, String> SMS_CODE = createField("sms_code_", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.wx_user.password_</code>.
     */
    public final TableField<JqUserRecord, String> PASSWORD = createField("password_", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.wx_user.role_</code>.
     */
    public final TableField<JqUserRecord, String> ROLE = createField("role_", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.wx_user.confirmed_</code>.
     */
    public final TableField<JqUserRecord, Boolean> CONFIRMED = createField("confirmed_", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.wx_user.enabled_</code>.
     */
    public final TableField<JqUserRecord, Boolean> ENABLED = createField("enabled_", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.wx_user</code> table reference
     */
    public JqUser() {
        this(DSL.name("wx_user"), null);
    }

    /**
     * Create an aliased <code>public.wx_user</code> table reference
     */
    public JqUser(String alias) {
        this(DSL.name(alias), USER);
    }

    /**
     * Create an aliased <code>public.wx_user</code> table reference
     */
    public JqUser(Name alias) {
        this(alias, USER);
    }

    private JqUser(Name alias, Table<JqUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private JqUser(Name alias, Table<JqUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JqPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JqUserRecord> getPrimaryKey() {
        return Keys.USER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JqUserRecord>> getKeys() {
        return Arrays.<UniqueKey<JqUserRecord>>asList(Keys.USER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JqUser as(String alias) {
        return new JqUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JqUser as(Name alias) {
        return new JqUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JqUser rename(String name) {
        return new JqUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JqUser rename(Name name) {
        return new JqUser(name, null);
    }
}
